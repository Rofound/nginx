# author Liu Pei <1353590214@qq.com>
# since 2020.11.5
# nginx-1.18.0


server {
  listen 	10003;
	#include myfams.env;
	# 新的主服务前端页面打包地址
	location ~ .*((login\.html)(.*)$) {
    root  /myfams-env/nginx-1.18.0/html/; 
		rewrite  ^/  /jump.html  break;
	}
	location /myfams {
		alias  /myfams-env/nginx-1.18.0/myfams/newframework/dist/;
		#root $mainservice;
		index  index.html;
    try_files $uri $uri/ /index.html;
		#rewrite ^/.*/$ / last; # Redirect everything to / (ex index.html) and let the JS router take care of the rest
		#rewrite ^([^.]*[^/])$ $1/ permanent; # Force trailing slash
	}
	# 转发至后端主服务
	location /myfams/rest/ {
		proxy_pass  http://localhost:8080/myfams/rest/;
		#proxy_pass $backendmainservice;
		proxy_set_header Host  $Host;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
		proxy_http_version  1.1;
		proxy_send_timeout  300; # 秒
		proxy_read_timeout  300; # 秒
		proxy_connect_timeout  300; # 秒
	}
	# 转发至后端主服务
	location /myfams/websocket/ {
		proxy_pass  http://localhost:8080/myfams/websocket/;
		#proxy_pass $backendmainservice;
		proxy_set_header Host  $Host;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
		proxy_http_version  1.1;
		proxy_set_header Upgrade  $http_upgrade; # websocket 等升级http协议
		proxy_set_header Connection  "upgrade"; # websocket 等升级http协议
		proxy_send_timeout  300; # 秒
		proxy_read_timeout  300; # 秒
		proxy_connect_timeout  300; # 秒
	}
	# 转发至后端主服务
	location /myfams/resources/ {
		proxy_pass  http://localhost:8080/myfams/resources/;
		#proxy_pass $backendmainservice;
		proxy_set_header Host  $Host;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
		proxy_http_version  1.1;
		proxy_send_timeout  300; # 秒
		proxy_read_timeout  300; # 秒
		proxy_connect_timeout  300; # 秒
	}
	# 转发至后端主服务
	#location /myfams/recruitment/ 
	# 转发至后端主服务
	location /myfams/static/ {
		proxy_pass  http://localhost:8080/myfams/static/;
		#proxy_pass $backendmainservice;
		proxy_set_header Host  $Host;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
		proxy_http_version  1.1;
		proxy_send_timeout  300; # 秒
		proxy_read_timeout  300; # 秒
		proxy_connect_timeout  300; # 秒
	}
	# 转发至后端主服务
	location /myfams/sockjs/ {
		proxy_pass  http://localhost:8080/myfams/sockjs/;
		#proxy_pass $backendmainservice;
		proxy_set_header Host  $Host;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
		proxy_http_version  1.1;
		proxy_set_header Upgrade  $http_upgrade; # websocket 等升级http协议
		proxy_set_header Connection  "upgrade"; # websocket 等升级http协议
		proxy_send_timeout  300; # 秒
		proxy_read_timeout  300; # 秒
		proxy_connect_timeout  300; # 秒
	}
	# 转发至后端主服务
	#location /myfams/treasure/ {
	# 转发至后端主服务
	#location /myfams/productparam/ {
	location /myfams/commonstatic/ {
		alias /myfams-env/nginx-1.18.0/myfams/commonstatic/;
    autoindex  on;
	}
}

# 别名方式配置qiankun微服务
server {
  listen  10001;
	location /qiankun/ {
		alias		/myfams-env/nginx-1.18.0/nginx/myfams/;
		#alias		$myfamsmicroservicedir;

		# TODO. 添加 websocket 支持

		# 添加 cros
		add_header 'Access-Control-Allow-Origin' *;
		add_header 'Access-Control-Allow-Credentials' 'true';
		add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE';
		add_header 'Access-Control-Allow-Headers' 'Content-Type, x-requested-with, X-Custom-Header, Authorization';
		add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range'; # 提供给客户端访问的响应头
		if ($request_method = 'OPTIONS') {
			# 预检命令的缓存， 如果不缓存每次会发送两次请求
			add_header 'Access-Control-Max-Age'  1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length'  0;
			# 不返回主体内容
			return  204;
		}
		
	}
	location /myfams/productrobot/ {
		proxy_pass  http://192.168.1.40:8091/myfams/productrobot/;
		proxy_set_header Host  $Host;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
		proxy_set_header Cookie $http_cookie;


		# 添加 cros
		add_header 'Access-Control-Allow-Origin' *;
		add_header 'Access-Control-Allow-Credentials' 'true';
		add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE';
		add_header 'Access-Control-Allow-Headers' 'Content-Type, x-requested-with, X-Custom-Header, Authorization';
		add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range'; # 提供给客户端访问的响应头
		if ($request_method = 'OPTIONS') {
			# 预检命令的缓存， 如果不缓存每次会发送两次请求
			add_header 'Access-Control-Max-Age'  1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length'  0;
			# 不返回主体内容
			return  204;
		}
	}
}